  1)안드로이드 태스크란? (Android Task, Activity Stack)
	Task는 어플리케이션에서 실행되는 액티비티를 보관하고 관리하며 Stack형태의 연속된 Activity로 이루어진다.
	Flag를 사용하여 Task내 액티비티의 흐름을 제어


  1) 인텐트 플래그
	인텐트를 사용할 때 플래그로 인텐트의 속성을 지정 가능


	FLAG_ACTIVITY_CLEAR_TOP
	호출하는 액티비티가 스택에 존재할 경우에, 해당 액티비티를 최상위로 올리면서, 
	그 위에 존재하던 액티비티들은 모두 삭제를 하는 플래그
	예를 들어 ABCDE가 존재하는 상태에서 C를 호출하게 되면 ABC만 남고 DE는 제거


	FLAG_ACTIVITY_FORWARD_RESULT
	startActivityForResult를 이용하여서 Activity를 호출할 경우에, 호출하는 쪽이 
	아닌 한번 더 거쳐서 Result를 받고 싶을 때 사용
	이러한 경우에 사용하면 되며, A->B->C 일 경우에 C에서 setResult를 설정하여주고, 
	B에서 finish를 하게 되면 A에서는 C의 값을 반환


	FLAG_ACTIVITY_REORDER_TO_FRONT
	이 플래그를 이용하게 되면 호출하려는 Activity가 스택에 존재할 경우에
	최상위로 올려주는 효과
	예를 들어 ABCDE가 있을 경우 C를 호출하게 되면 ABDEC순서로 정렬


	FLAG_ACTIVITY_SINGLE_TOP
	호출되는 Activity가 최상위에 존재할 경우에는 해당 Activity를 다시 생성하지 않고
	존재하던 Activity를 다시 사용
	예를 들면 ABC가 존재하는 경우에 C를 호출하게 되면 기존과 동일하게 ABC가 나옴



  3) 펜딩 인텐트
	직접 작업을 처리하지 않고 다른 컴포넌트에 위임처리를 하는 기능

	ex)알림 창을 클릭하면 알림창이 처리하지 않고 액티비티를 호출하여 처리하도록 하는 것

    (1) 펜딩 인텐트 플래그
	FLAG_CANCEL_UPDATE
	이전 생성된 것를 취소하고 새롭게 생성

	FLAG_UPDATE_CURRENT
	이전 생성된 것이 있다면 변경

	FLAG_ONE_SHOT
	일회용으로 생성 (위젯에 적용한다면 최초 클릭에만 작동하고 그 다음 클릭부터는 작동하지 않음)

	FLAG_NO_CREATE
	생성된 것이 있다면 회수
	
	FLAG_CANCEL_CURRENT
	이전에 생성된 작업을 취소하고 새롭게 만든다.



11. 프래그먼트
  프래그먼트는 하나의 액티비티가 여러 개의 화면을 가지도록 만들기 위해 고안된 개념
  다양한 크기의 화면을 가진 모바일 환경이 늘어남에 따라  하나의 디스플레이 안에서 
  아이패드, 갤럭시 탭과 같은 다양한 화면 요소들을 보여하는 경우가 생기게 되었고
  이를 좀 더 쉽게 구현하기 위해 나온 개념


  1) 기본적인 사용법

    1. 각 프래그먼트를 위한 레이아웃 XML파일 생성

    2. 프래그먼트 클래스 구현
-------------------------------------------------------------------------------------
package com.example.day11_2;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

public class SampleFragment1 extends Fragment {
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    return inflater.inflate(R.layout.fragment_sample1, container, false);
    }

}
-------------------------------------------------------------------------------------
    3. 액티비티에서 프래그먼트 추가
-------------------------------------------------------------------------------------
	xml 파일을 이용해서 추가하는 방법
-------------------------------------------------------------------------------------
  <fragment
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/id"
        android:name="프래그먼트 클래스 파일 이름"
        android:layout_weight="1"
        tools:layout="@layout/activity_main" />
-------------------------------------------------------------------------------------
	자바 코드에서 추가하는 방법
-------------------------------------------------------------------------------------
        FragmentManager fm = getSupportFragmentManager();
        FragmentTransaction fragmentTransaction = fm.beginTransaction();
        fragmentTransaction.add(뷰그룹, new 프래그먼트 클래스);
        fragmentTransaction.commit();



    4. FragmentTransaction을 사용하여 프래그먼트 제어
-------------------------------------------------------------------------------------
	FragmentTransaction의 replace메소드를 이용하여 프래그먼트 변경
-------------------------------------------------------------------------------------
            FragmentManager fm = getSupportFragmentManager();
            FragmentTransaction fragmentTransaction = fm.beginTransaction();
            Fragment fr1;
            fr1 = new SampleFragment1();

            fragmentTransaction.replace(변경할뷰의ID, fr1);



  2) 프래그먼트 생명주기
    1. onAttach
	프래그먼트가 처음으로 액티비티에 추가될 때 호출
	
    2. onCreate
	프래그먼트에 꼭 필요한 요소들을 먼저 초기화 하고 시작
	아직 액티비티도 만들어지는 중
	UI초기화는 다음 단계에서 진행


12. 어댑터 뷰
	ListView, GridView 등과 같이 연속된 레이아웃을 생성할 때 사용하는 뷰
	Adapter를 사용하여 데이터 셋을 입력하면 각각의 데이터 셋이 하나의
	레이아웃으로 구성된다.

  1) 구성요소
	Adapter : 데이터와 아이템에 대한 View생성
	ViewHolder : 재활용 뷰에 대한 정보를 보유
	LayoutManager : 아이템의 항목을 배치
	ItemDecoration : 아이템 항목에서 뷰에 대한 처리
	ItemAnimation : 아이템 항목이 추가, 제거되거나 정렬될때 애니메이션 처리


  2) RecyclerView
	ListView에 비해서 확장성이 높고 유연하게 레이아웃 구성이 가능하다.
	implementation "androidx.recyclerview:recyclerview:1.1.0"
	implementation "androidx.recyclerview:recyclerview-selection:1.1.0-rc01"








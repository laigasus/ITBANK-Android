4. 고급 위젯
  1) 날짜 및 시간 관련 위젯
    (1) 아날로그시계
    <AnalogClock
        android:layout_width="match_parent"
        android:layout_height="wrap_content" />

    (2) 디지털시계
    <DigitalClock
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"/>

    (3) 크로노미터
    <Chronometer
        android:format="시간 측정 : %s"
        android:gravity="center"
        android:textSize="30dp"
        android:layout_width="match_parent"
        android:layout_height="wrap_content" />

    (4) 타임피커
     <TimePicker
        android:timePickerMode="spinner"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"></TimePicker>

    (5) 데이트피커와 캘린더뷰

    <DatePicker
        android:datePickerMode="spinner"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"></DatePicker>

    (6) 날짜 및 시간 관련 뷰로부터 값 받아오기
	뷰클래스 변수;
	변수 = (뷰클래스)findViewById(R.id.[값]);
	변수.getYear();		//년도 받아오기
	변수.getMonth()+1;	//월 받아오기
	변수.getDayOfMonth();	//날짜 받아오기
	변수.getCurrentHour();	//시간 받아오기
	변수.getCurrentMinute();	//분 받아오기
	


  2) 자동완성(멀티)텍스트뷰
    (1) 자동완성텍스트뷰
    <AutoCompleteTextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"	
        android:completionThreshold="2"		<!-- 입력값이 몇자리 이상일 때 자동완성 보이기 -->
        android:completionHint="선택하세요"	<!-- 리스트 하단에 뜨는 문자 -->
        android:hint="자동완성텍스트뷰"/>


    (2) 자동완성멀티텍스트뷰
    <MultiAutoCompleteTextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:completionHint="선택하세요"
        android:hint="자동완성멀티텍스트뷰"/>


  3) 바
    (1) 프로그레스 바
    <ProgressBar
        style="?android:attr/progressBarStyleHorizontal"	<!-- 바 모양 설정 -->
        android:max="100"				<!-- 바 최대값 설정 -->
        android:progress="20"				<!-- 바 현재값 설정 -->
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
      />

    (2) 시크바
 <SeekBar
        android:progress="50"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
      />

    (3)레이팅바
    <RatingBar
        android:stepSize="0.5"				<!-- 별이 차오르는 단위 -->
        android:numStars="7"				<!-- 전체 별의 수 -->
        android:rating="3.5"				<!-- 현재 별의값 -->
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
    />


  4) 뷰컨테이너
    (1) 스크롤뷰
	<ScrollView 
	    android:layout_width="fill_parent"
	    android:layout_height="fill_parent"
	    android:orientation="vertical" >
		수직으로 스크롤하는 기능의 뷰

	    <HorizontalScrollView
	        android:layout_width="fill_parent"
	        android:layout_height="fill_parent"
	       android:orientation="vertical" >
		수평으로 스크롤하는 기능의 뷰


	*스크롤뷰 안에 레이아웃 추가 후 레이아웃 뷰를 추가

    (2) 슬라이딩드로어
	서랍처럼 열어서 보여주거나 닫아서 감춤

	android:content="@+id/content"	<!-- 서랍안의 내용물이 될 뷰 -->
	android:handle="@+id/handle	<!-- 서랍의 손잡이가 될 뷰 -->
	android:topOffset="200dp"		<!-- 부모와의 간격 조절 -->


    (3) 뷰 플리퍼
	내부의 여러 개의 위젯을 배치한 후 필요에 따라서 화면을 왼쪽과 오른쪽으로 밀어서 
	하나의 위젯씩 보여주는 방식의 뷰 컨테이너

	
	뷰플리퍼.setFlipInterval(1000);

	뷰플리퍼.startFlipping();

	뷰플리퍼.stopFlipping();


    (4) 탭 호스트
	여러 탭을 두고 각 탭을 클릭할 때마다 해당 화면이 나오도록 설정하는 뷰

    (5) 바텀네비게이션 뷰
	Gradle 라이브러리 관리 도구, 라이브러리의 이름 및 버전만 입력하면 
	자동으로 라이브러리를 다운 및 프로젝트에 추가

      1) Gradle Scripts -> build.gradle(Module:app) 하단에 추가 -> sync now 클릭
	    implementation 'com.google.android.material:material:1.0.0'
	    implementation 'androidx.navigation:navigation-fragment:2.1.0'
	    implementation 'androidx.navigation:navigation-ui:2.1.0'
	    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'

      2) activity_main.xml 에 뷰 추가
    <com.google.android.material.bottomnavigation.BottomNavigationView
        android:id="@+id/nav_view"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:menu="@menu/bottom_nav_menu" />	


      3) menu 리소스 폴더 추가 후 menu 생성
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/item1"
        android:title="people"
        android:icon="@drawable/baseline_person_outline_black_18dp" />
    <item
        android:id="@+id/item2"
        android:title="chat"
        android:icon="@drawable/baseline_chat_bubble_outline_black_18dp" />

    <item
        android:id="@+id/item3"
        android:title="settings"
        android:icon="@drawable/baseline_settings_black_18dp" />
</menu>

      4) activity_main.xml 에 화면이 되는 레이아웃 추가
<FrameLayout
        android:id="@+id/mainframe"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        app:layout_constraintBottom_toTopOf="@+id/nav_view"
        />

      5) 프레그먼트 추가
	java 클래스 파일에서 fragment -> blank fragment 추가

      6) MainActivity.java에서 코드 작성


    (6) 웹 뷰
	인터넷 브라우져처럼 동작하는 뷰

	*주의 : 인터넷 접근 권한이 필요

   	*권한 설정 AndroidManifest.xml 파일에 

		<uses-permission android:name="android.permission.권한">
		</uses-permission>

<uses-permission android:name="android.permission.INTERNET"/> 
   - 인터넷 사용 

<uses-permission android:name="android.permission.READ_CALENDAR"/> 
   - 캘린더 읽어오기

<uses-permission android:name="android.permission.WRITE_CALENDAR"/>       
   - 캘린더 쓰기
                   
<uses-permission android:name="android.permission.READ_CONTACTS"/>         
   - 주소록 읽어오기

<uses-permission android:name="android.permission.WRITE_CONTACTS"/> 
   - 주소록 쓰기
<uses-permission android:name="android.permission.REBOOT"/>  
   - reboot
                            
<uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>    
   - boot 완료 

<uses-permission android:name="android.permission.RECEIVE_MMS"/>  
   - MMS 수신    
                       
<uses-permission android:name="android.permission.RECEIVE_SMS"/>  
   - SMS 수신

<uses-permission android:name="android.permission.WRITE_SMS"/>               
   - SMS 쓰기 

<uses-permission android:name="android.permission.STATUS_BAR"/>    
   - 상태표시줄 지정  

<uses-permission android:name="android.permission.VIBRATE"/>                      
   - 진동        
                      
<uses-permission android:name="android.permission.WAKE_LOCK"/>    
   - 알람                 

<uses-permission android:name="android.permission.CALL_PHONE"/> 
   - 통화   
                           
<uses-permission android:name="android.permission.CALL_PRIVILEGED"/> 
   - 통화(긴급전화 포함)  
             
<uses-permission android:name="android.permission.CAMERA"/>  
   - 카메라  

<uses-permission android:name="android.permission.FLASHLIGHT"/>
   - 플래시라이트  

<uses-permission android:name="android.permission.CHANGE_NETWORK_STATE"/>    
   - 통신상태 변경  

<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>      
   - 네트워크 상태 접근
                   
<uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>         
   - WiFi 상태 변경 

<uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>       
   - WiFi 상태 접근   
                  
<uses-permission android:name="android.permission.BATTERY_STATS"/> 
   - 배터리 상태      
                 
<uses-permission android:name="android.permission.BLUETOOTH"/>     
   - 블루투스

<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>   
   - 코스 로케이션 액세스 (Cell-ID/WiFi)

<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>         
   - 파인로케이션 액세스 (GPS)  
















